class Solution {
    public String decodeString(String s) {
        Stack<Integer> countStack = new Stack<>();
        Stack<StringBuilder> stringStack = new Stack<>();
        StringBuilder currString = new StringBuilder();
        int currNum = 0;
        for(char c : s.toCharArray()){
            if(Character.isDigit(c)){
                currNum = currNum * 10 +(c-'0');
            } else if(c == '['){
                countStack.push(currNum);
                stringStack.push(currString);
                currNum = 0;
                currString = new StringBuilder();
            } else if(c == ']'){
                int repeatTimes = countStack.pop();
                StringBuilder decoded = stringStack.pop();
                for(int i = 0 ; i < repeatTimes; i++){
                    decoded.append(currString);
                }
                currString = decoded;
            } else {
                currString.append(c);
            }
        }
        return currString.toString();
    }
}