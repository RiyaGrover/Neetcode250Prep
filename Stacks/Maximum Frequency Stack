class FreqStack {
    Map<Integer, Integer> freq; // value -> frequency
    Map<Integer, Stack<Integer>> group; // frequency -> stack of values
    int maxFreq;

    public FreqStack() {
        freq = new HashMap<>();
        group = new HashMap<>();
        maxFreq = 0;
    }
    
    public void push(int val) {
        int f = freq.getOrDefault(val, 0) + 1;
        freq.put(val, f);

        if (!group.containsKey(f)) {
            group.put(f, new Stack<>());
        }
        group.get(f).push(val);

        maxFreq = Math.max(maxFreq, f);
    }
    
    public int pop() {
        Stack<Integer> stack = group.get(maxFreq);
        int val = stack.pop();

        freq.put(val, freq.get(val) - 1);

        if (stack.isEmpty()) {
            maxFreq--; // reduce maxFreq if no elements at this level
        }
        return val;
    }
}
